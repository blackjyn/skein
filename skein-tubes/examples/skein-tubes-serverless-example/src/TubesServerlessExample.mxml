<?xml version="1.0" encoding="utf-8"?>
<f:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:f="library://ns.feathersui.com/mxml"
               theme="feathers.themes.MetalWorksMobileTheme" showStats="true">


    <fx:Script>
        <![CDATA[
        import feathers.data.VectorCollection;

        import skein.Tubes;
        import skein.tubes.tube;
        import skein.tubes.tube.Tube;
        import skein.tubes.tubes;

        [Bindable]
        private var _tube: Tube;

        private function setupHandler(): void {

            _tube = tubes("skein.tubes.test")
                        .connection()
                            .address("rtmfp:")
                        .build()
                        .specifier()
                            .postingEnabled(true)
                            .routingEnabled(true)
                            .multicastEnabled(true)
                            .addIPMulticastAddress("239.254.254.2:30304")
                            .ipMulticastMemberUpdatesEnabled(true)
                        .build()
                    .build();

            _tube.posting.onMessage(function (message: Object, from: String, tube: Tube): void {
                outputTextArea.text += "post from: " + from + ":\n" + message + "\n";
                tube.messaging.send(from, "received");
            });

            _tube.messaging.on("broadcast", function (message: Object, from: String, tube: Tube): void {
                outputTextArea.text += "broadcast from:" + from + ":\n" + message;
                _tube.messaging.send(from, "received");
            });

            _tube.messaging.onMessage(function (message: Object, from: String, tube: Tube): void {
                outputTextArea.text += "message from:" + from + ":\n" + message;
            });
        }

        private function disposeHandler(): void {
            _tube.dispose();
            _tube = null;
        }

        private function postHandler(): void {
            _tube.posting.send(postInput.text, function (messageId: String = null): void {
                postInput.text = null;
            });
        }

        private function sendHandler(): void {
            var peerId: String = neighborList.selectedItem as String;
            if (peerId) {
                _tube.messaging.send(peerId, sendInput.text, function (): void {
                    sendInput.text = null;
                });
            }
        }

        private function sendAllHandler(): void {
            _tube.messaging.emit("broadcast", sendAllInput.text);
        }
        ]]>
    </fx:Script>

    <f:layout>
        <f:VerticalLayout horizontalAlign="center" gap="20" paddingTop="40" paddingBottom="40" paddingLeft="20" paddingRight="20" />
    </f:layout>

    <f:LayoutGroup>
        <f:layout><f:HorizontalLayout horizontalAlign="center" /></f:layout>
        <f:Button label="Setup" triggered="setupHandler()" />
        <f:Button label="Dispose" triggered="disposeHandler()" />
    </f:LayoutGroup>

    <f:LayoutGroup>
        <f:layoutData><f:VerticalLayoutData percentWidth="100"/></f:layoutData>
        <f:layout><f:VerticalLayout gap="10"/></f:layout>
        <f:TextArea id="outputTextArea">
            <f:layoutData><f:VerticalLayoutData percentWidth="100"/></f:layoutData>
        </f:TextArea>
        <f:LayoutGroup>
            <f:layoutData><f:VerticalLayoutData percentWidth="100"/></f:layoutData>
            <f:layout><f:HorizontalLayout gap="10"/></f:layout>
            <f:TextInput id="postInput">
                <f:layoutData><f:HorizontalLayoutData percentWidth="100"/></f:layoutData>
            </f:TextInput>
            <f:Button label="Post" triggered="postHandler()" />
        </f:LayoutGroup>
        <f:LayoutGroup>
            <f:layoutData><f:VerticalLayoutData percentWidth="100"/></f:layoutData>
            <f:layout><f:HorizontalLayout gap="10"/></f:layout>
            <f:TextInput id="sendInput">
                <f:layoutData><f:HorizontalLayoutData percentWidth="80"/></f:layoutData>
            </f:TextInput>
            <f:PickerList id="neighborList" dataProvider="{new VectorCollection(_tube.neighborhood.neighbors)}">
                <f:layoutData><f:HorizontalLayoutData percentWidth="20"/></f:layoutData>
            </f:PickerList>
            <f:Button label="Send" triggered="sendHandler()" />
        </f:LayoutGroup>
        <f:LayoutGroup>
            <f:layoutData><f:VerticalLayoutData percentWidth="100"/></f:layoutData>
            <f:layout><f:HorizontalLayout gap="10"/></f:layout>
            <f:TextInput id="sendAllInput">
                <f:layoutData><f:HorizontalLayoutData percentWidth="100"/></f:layoutData>
            </f:TextInput>
            <f:Button label="Send All" triggered="sendAllHandler()" />
        </f:LayoutGroup>
    </f:LayoutGroup>

</f:Application>
